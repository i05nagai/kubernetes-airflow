apiVersion: v1
kind: Service
metadata:
  name: airflow-web
spec:
  type: NodePort
  selector:
    app: airflow
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 5601
      targetPort: web
      nodePort: 30601
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-flower
spec:
  type: NodePort
  selector:
    app: airflow
    tier: flower
  ports:
    - name: flower
      protocol: TCP
      port: 5555
      targetPort: flower
      nodePort: 30555
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
      - name: web
        image: ${DOCKER_REGISTRY_HOST}/${DOCKER_IMAGE_BASE}/workflow-airflow:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: airflow-environment-variable
        volumeMounts:
        - name: "airflow-volume"
          mountPath: "${AIRFLOW_HOME}"
        ports:
        - name: web
          containerPort: 5601
        args: ["webserver"]
      volumes:
        - name: "airflow-volume"
          hostPath:
            path: ${MOUNT_AIRFLOW_PATH}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-flower
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: flower
    spec:
      restartPolicy: Always
      containers:
      - name: flower
        image: ${DOCKER_REGISTRY_HOST}/${DOCKER_IMAGE_BASE}/workflow-airflow:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: airflow-environment-variable
        ports:
        - name: flower
          containerPort: 5555
        args: ["flower"]
        volumeMounts:
        - name: "airflow-volume"
          mountPath: "${AIRFLOW_HOME}"
      volumes:
        - name: "airflow-volume"
          hostPath:
            path: ${MOUNT_AIRFLOW_PATH}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-scheduler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: scheduler
    spec:
      restartPolicy: Always
      containers:
      - name: scheduler
        image: ${DOCKER_REGISTRY_HOST}/${DOCKER_IMAGE_BASE}/workflow-airflow:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: airflow-environment-variable
        args: ["scheduler"]
        volumeMounts:
        - name: "airflow-volume"
          mountPath: "${AIRFLOW_HOME}"
      volumes:
        - name: "airflow-volume"
          hostPath:
            path: ${MOUNT_AIRFLOW_PATH}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-worker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: worker
    spec:
      restartPolicy: Always
      containers:
      - name: worker
        image: ${DOCKER_REGISTRY_HOST}/${DOCKER_IMAGE_BASE}/airflow-core:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: airflow-environment-variable
        args: ["worker"]
        volumeMounts:
        - name: "airflow-volume"
          mountPath: "${AIRFLOW_HOME}"
      volumes:
        - name: "airflow-volume"
          hostPath:
            path: ${MOUNT_AIRFLOW_PATH}

